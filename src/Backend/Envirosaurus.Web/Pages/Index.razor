@page "/"
@using Services
@code{    
    [Inject]
    SensorService _sensorService { get; set; }

    [Inject]
    SensorReadingService _sensorReadingService { get; set; }

    Dictionary<string, int> sensorIDMap = new Dictionary<string, int>();

    protected override void OnInitialized()
    {
        foreach(Sensor sensor in _sensorService.GetAll())
        {
            if (!sensorIDMap.ContainsKey(sensor.DeviceSerialNumber))
            {
                sensorIDMap.Add(sensor.DeviceSerialNumber, sensor.AssignedNumber);
            }
        }
    }
}

<PageTitle>@GlobalSettings.ProductName</PageTitle>

<style type="text/css">
    .heading_container { border: 0; text-align: center; padding: 10px; padding-top: 100px; }
    .page_container { max-width: 800px; margin-left: auto; margin-right: auto; }
    .main_title { font-size: 250%; font-weight: bold; } 
    .main_subtitle {font-size: 125%; }
</style>

<div class="page_container"><!-- page container -->

    <div class="heading_container">
        <div class="main_title">@GlobalSettings.ProductName</div>
        <div class="main_subtitle">@GlobalSettings.ProductSubName</div>
    </div>
    <br/><br/>
    <div class="row">
        <div class="col-6">
            <h2 class="text-center">Last sensor readings</h2>
            <table class="table">
                <thead>
                    <tr>
                        <td>Sensor</td>
                        <td>Timestamp</td>
                    </tr>
                </thead>

                @foreach(SensorReading reading in _sensorReadingService.Find(x => !string.IsNullOrEmpty(x.DeviceSerialNumber), 10, x => x.TimestampUTC, true))
                {                    
                    <tr>
                        <td class="text-center">
                            @if(sensorIDMap.ContainsKey(reading.DeviceSerialNumber))
                            {
                                @sensorIDMap[reading.DeviceSerialNumber]
                            } else {
                                @reading.DeviceSerialNumber
                            }
                            
                        </td>
                        <td>
                            @if (reading.TimestampUTC != null) {
                                @TimeZoneInfo.ConvertTimeFromUtc(reading.TimestampUTC, GlobalSettings.TimeZone)
                            }                            
                        </td>
                    </tr>
                }                
            </table>

        </div>
        
        <div class="col-6">
            <h2 class="text-center">Last heartbeats</h2>
            <table class="table">
                <thead>
                    <tr>
                        <td>Sensor</td>
                        <td>Timestamp</td>
                    </tr>
                </thead>

                @foreach(Sensor sensor in _sensorService.Find(x => x.LastHeartbeatUTC != null, 10, x => x.LastHeartbeatUTC, true))
                {
                    <tr>
                        <td class="text-center">@sensor.AssignedNumber</td>
                        <td>
                            @if (sensor.LastHeartbeatUTC != null) {
                                @TimeZoneInfo.ConvertTimeFromUtc(sensor.LastHeartbeatUTC ?? DateTime.MinValue.ToUniversalTime(), GlobalSettings.TimeZone)
                            }                            
                        </td>
                    </tr>
                } 
                
            </table>
        </div>
        
    </div>

</div><!-- page container -->
